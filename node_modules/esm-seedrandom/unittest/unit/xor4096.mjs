import * as assert from 'uvu/assert'
import {test_prng_alg} from './_common.mjs'

import { prng_xor4096 } from 'esm-seedrandom'
import { prng_xor4096 as prng_xor4096_isolated } from 'esm-seedrandom/esm/xor4096.mjs'
import { prng_xor4096 as prng_xor4096_minify } from 'esm-seedrandom/esm/xor4096.min.mjs'

const cjs_prng_xor4096 = require('seedrandom/lib/xor4096.js')

describe('xor4096', () => {
  let _ans_shared = [0.6993883652612567,0.2972783006262034,0.9184850819874555]
  const snap = {
    seed: 'an example seed string',
    direct: _ans_shared,
    quick: _ans_shared,
    int32: [-1291117140, 1276800579, -350103907],
    double: [0.6993881689445022,0.9184847710401316,0.39560491763906536],
  }

  describe('shared', () =>
    test_prng_alg('xor4096', prng_xor4096, snap))

  describe('isolated', () =>
    test_prng_alg('xor4096', prng_xor4096_isolated, snap))

  describe('isolated minified', () =>
    test_prng_alg('xor4096', prng_xor4096_minify, snap))

  if (cjs_prng_xor4096)
    describe('original seedrandom (CommonJS)', () =>
      test_prng_alg('xor4096', cjs_prng_xor4096, snap))
})

describe('xor4096 with state', () => {
  let _ans_shared = [ 0.5910869480576366, 0.4439348168671131, 0.8686158978380263 ]
  const snap = {
    opt: {state: {"i":127,"w":-1777552588,"X":[-257799923,1406113259,1375561534,1532596805,1509840809,-1348605322,-1254322747,-1647634294,1321702170,1688648415,2143011051,2070557632,1427563947,-1912522375,1482709833,228717764,875099773,-81025456,749270504,-2063915448,2006827369,-192710701,800528103,-1987819366,-2104188427,992696610,-2070727171,1403673013,1656307029,-1727936959,1704606474,-1450207342,1594349482,-1682754632,-2022753359,1713822413,-1235769415,-566195523,1507698409,-2133788888,1810622117,-279989735,-1669035321,-2065088392,-727359429,-883176448,-465270756,-702833461,-1333148752,-965669287,1532434520,-177638986,-221201882,958765335,296186856,2032480663,-534741483,-1101374780,-611434991,-1776565680,-240327092,-1407954063,1936741697,1792640521,677639556,-1368051483,-1190958976,125668068,1280076544,1038572315,-1944891757,-363035801,139408245,-1912512970,1617681372,268929814,-23247734,1448073547,-1965512623,875199335,533545432,-27159931,-1662305229,1302349679,-629665445,375081342,1859322184,425055243,227277240,413125267,-917873087,-1120263347,-1213300338,-1459178021,1691464233,824853583,-155515193,-1894913238,-1002792824,-1372623340,1821168545,498227719,-75567295,952668218,1781920061,-1873995929,92998523,428831074,2043251958,-1952774412,-1040364735,1381392966,-85754804,1649531372,358812297,436037272,-988310603,-622053250,1524206658,680838942,433113176,1806270828,-925518775,-16246847,1505879177,804231832,68567600,2049015687]}},
    direct: _ans_shared,
    quick: _ans_shared,
    int32: [ -1756268185, 1906685520, -564290422 ],
    double: [ 0.591087076156052, 0.8686157961146537, 0.72138522418555 ],
  }

  describe('shared', () =>
    test_prng_alg('xor4096', prng_xor4096, snap))

  describe('isolated', () =>
    test_prng_alg('xor4096', prng_xor4096_isolated, snap))

  describe('isolated minified', () =>
    test_prng_alg('xor4096', prng_xor4096_minify, snap))

  if (cjs_prng_xor4096)
    describe('original seedrandom (CommonJS)', () =>
      test_prng_alg('xor4096', cjs_prng_xor4096, snap))
})
